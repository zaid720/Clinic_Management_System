/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controls.CtlAppointment;
import Models.MAppointment;
import Models.MQeuryName;
import java.awt.ComponentOrientation;
import java.awt.Frame;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JSpinner;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ITS
 */
public class VUpdateAppointment extends javax.swing.JDialog {

    private CtlAppointment appointment = new CtlAppointment();

    /**
     * Creates new form VUpdatePatients
     */
    public VUpdateAppointment(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        pack();
    }

    public VUpdateAppointment(Frame parent, boolean modal, MAppointment obj) {
        super(parent, modal);
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        pack();
        init();
        setData(obj);
    }

    private void init() {
        setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        cboxNamePatient.setEditable(true);
        cboxNameDoctor.setEditable(true);
        AutoCompleteDecorator.decorate(cboxNamePatient);
        AutoCompleteDecorator.decorate(cboxNameDoctor);
        // استعارض اسم المريض
        for (MQeuryName read : appointment.namePatientQeury()) {
            cboxNamePatient.addItem(new MQeuryName(read.getId(), read.getName()));
        }
        // استعراض اسم الدكتور
        for (MQeuryName read : appointment.nameDoctorQeury()) {
            cboxNameDoctor.addItem(new MQeuryName(read.getId(), read.getName()));
        }
    }

    private void setData(MAppointment mAppointment) {
        if (mAppointment != null) {
            txtID.setText(mAppointment.getId() + "");
            cboxNamePatient.setSelectedItem(new MQeuryName(mAppointment.getIdPatitent(), mAppointment.getPatient_name()));
            cboxNameDoctor.setSelectedItem(new MQeuryName(mAppointment.getIdDoctor(), mAppointment.getDoctor_name()));
            LocalDate localDate = mAppointment.getAppointment_date(); // LocalDate
            Date date = Date.from(localDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
            calDate.setDate(date);
            LocalTime localTime = mAppointment.getAppointment_time(); // eg. 14:30
            LocalDate today = LocalDate.now(); // نستخدم أي تاريخ لأن JSpinner يتعامل مع تاريخ ووقت
            LocalDateTime dateTime = LocalDateTime.of(today, localTime);
            spTime.setEditor(new JSpinner.DateEditor(spTime, "HH:mm:ss")); // 24-hour
            Date timeValue = Date.from(dateTime.atZone(ZoneId.systemDefault()).toInstant());
            spTime.setValue(timeValue); // الآن يمكن تعيينه في الـ JSpinner
            cboxStatus.setSelectedItem(mAppointment.getStatus());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        lblTimeAppointment = new javax.swing.JLabel();
        cboxNamePatient = new com.raven.combobox.Combobox();
        cboxNameDoctor = new com.raven.combobox.Combobox();
        spTime = new javax.swing.JSpinner(new javax.swing.SpinnerDateModel())
        ;
        cboxStatus = new com.raven.combobox.Combobox();
        lblTimeAppointment1 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtID = new com.raven.swing.MyTextField();
        lblNamePatient = new javax.swing.JLabel();
        lblDateAppointment = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnUpdatePatient = new com.raven.swing.Button();
        lblNameDoctor = new javax.swing.JLabel();
        calDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setOpaque(true);

        lblTimeAppointment.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        lblTimeAppointment.setText("وقت الموعد");

        cboxNamePatient.setForeground(new java.awt.Color(0, 0, 0));
        cboxNamePatient.setFont(new java.awt.Font("Simplified Arabic", 1, 12)); // NOI18N
        cboxNamePatient.setLabeText("اسم المریض");
        cboxNamePatient.setName(""); // NOI18N

        cboxNameDoctor.setForeground(new java.awt.Color(0, 0, 0));
        cboxNameDoctor.setFont(new java.awt.Font("Simplified Arabic", 1, 12)); // NOI18N
        cboxNameDoctor.setLabeText("اسم الدكتور");
        cboxNameDoctor.setName(""); // NOI18N

        cboxStatus.setForeground(new java.awt.Color(0, 0, 0));
        cboxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "محجوز", "ملغي", "مكتمل", "قادم" }));
        cboxStatus.setFont(new java.awt.Font("Simplified Arabic", 1, 12)); // NOI18N
        cboxStatus.setLabeText("الحالة");
        cboxStatus.setName(""); // NOI18N

        lblTimeAppointment1.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        lblTimeAppointment1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTimeAppointment1.setText("الحالة");

        lblID.setFont(new java.awt.Font("Simplified Arabic", 1, 18)); // NOI18N
        lblID.setText("#");

        txtID.setEnabled(false);

        lblNamePatient.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        lblNamePatient.setText("اسم المريض");

        lblDateAppointment.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        lblDateAppointment.setText("تاريخ الموعد");

        lblTitle.setFont(new java.awt.Font("Simplified Arabic", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("تعديل موعد");

        btnUpdatePatient.setBackground(new java.awt.Color(51, 51, 51));
        btnUpdatePatient.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdatePatient.setText("تعديل");
        btnUpdatePatient.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        btnUpdatePatient.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });

        lblNameDoctor.setFont(new java.awt.Font("Simplified Arabic", 1, 14)); // NOI18N
        lblNameDoctor.setText("اسم الدكتور");

        calDate.setBackground(new java.awt.Color(255, 255, 255));
        calDate.setDate(new java.util.Date());
        calDate.setDateFormatString("MM/dd/yyyy");

        jLayeredPane1.setLayer(lblTimeAppointment, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxNamePatient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxNameDoctor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(spTime, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cboxStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblTimeAppointment1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblNamePatient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblDateAppointment, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnUpdatePatient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblNameDoctor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(calDate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboxStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spTime))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTimeAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTimeAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(calDate, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblDateAppointment))
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addComponent(cboxNameDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                                                .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblID)
                                                .addGap(137, 137, 137))
                                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                                .addComponent(lblNameDoctor)
                                                .addGap(114, 114, 114)
                                                .addComponent(cboxNamePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(lblNamePatient)))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(63, 63, 63))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(btnUpdatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboxNamePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxNameDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNamePatient))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblNameDoctor)))
                .addGap(50, 50, 50)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDateAppointment)
                    .addComponent(calDate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeAppointment)
                    .addComponent(spTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimeAppointment1))
                .addGap(43, 43, 43)
                .addComponent(btnUpdatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed
        VMessage message = new VMessage((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true);
        if (!cboxNamePatient.getSelectedItem().toString().trim().isEmpty()) {
            if (!cboxNameDoctor.getSelectedItem().toString().trim().isEmpty()) {
                MAppointment mAppointment = new MAppointment();
                mAppointment.setId(Integer.parseInt(txtID.getText()));
                MQeuryName idPatient = (MQeuryName) cboxNamePatient.getSelectedItem();
                mAppointment.setIdPatitent(idPatient.getId());
                MQeuryName idDoctor = (MQeuryName) cboxNameDoctor.getSelectedItem();
                mAppointment.setIdDoctor(idDoctor.getId());
                LocalDate date = calDate.getDate().toInstant()
                        .atZone(ZoneId.systemDefault())
                        .toLocalDate();
                mAppointment.setAppointment_date(date);
                Date time = (Date) spTime.getValue();
                LocalTime localTime = time.toInstant()
                        .atZone(ZoneId.systemDefault())
                        .toLocalTime();
                mAppointment.setAppointment_time(localTime);
                mAppointment.setStatus(cboxStatus.getSelectedItem().toString().trim());
                try {
                    appointment.update(mAppointment);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                dispose();
            } else {
                message.setLblTitle("يجب التأكد من اسم الدكتور");
                message.setVisible(true);
                cboxNameDoctor.requestFocus();
            }
        } else {
            message.setLblTitle("يجب التأكد من اسم المريض");
            message.setVisible(true);
            cboxNamePatient.requestFocus();
        }
    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            VUpdateAppointment dialog = new VUpdateAppointment(new javax.swing.JFrame(), true);
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.raven.swing.Button btnUpdatePatient;
    private com.toedter.calendar.JDateChooser calDate;
    private com.raven.combobox.Combobox cboxNameDoctor;
    private com.raven.combobox.Combobox cboxNamePatient;
    private com.raven.combobox.Combobox cboxStatus;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLabel lblDateAppointment;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNameDoctor;
    private javax.swing.JLabel lblNamePatient;
    private javax.swing.JLabel lblTimeAppointment;
    private javax.swing.JLabel lblTimeAppointment1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JSpinner spTime;
    private com.raven.swing.MyTextField txtID;
    // End of variables declaration//GEN-END:variables
}
